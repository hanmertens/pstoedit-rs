/* automatically generated by rust-bindgen 0.69.4 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DriverDescription_S {
    pub symbolicname: *const ::std::os::raw::c_char,
    pub explanation: *const ::std::os::raw::c_char,
    pub suffix: *const ::std::os::raw::c_char,
    pub additionalInfo: *const ::std::os::raw::c_char,
    pub backendSupportsSubPaths: ::std::os::raw::c_int,
    pub backendSupportsCurveto: ::std::os::raw::c_int,
    pub backendSupportsMerging: ::std::os::raw::c_int,
    pub backendSupportsText: ::std::os::raw::c_int,
    pub backendSupportsImages: ::std::os::raw::c_int,
    pub backendSupportsMultiplePages: ::std::os::raw::c_int,
    #[cfg(feature = "pstoedit_4_00")]
    #[cfg_attr(docsrs, doc(cfg(feature = "pstoedit_4_00")))]
    pub formatGroup: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_DriverDescription_S() {
    const UNINIT: ::std::mem::MaybeUninit<DriverDescription_S> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    #[cfg(not(feature = "pstoedit_4_00"))]
    assert_eq!(
        ::std::mem::size_of::<DriverDescription_S>(),
        56usize,
        concat!("Size of: ", stringify!(DriverDescription_S))
    );
    #[cfg(feature = "pstoedit_4_00")]
    assert_eq!(
        ::std::mem::size_of::<DriverDescription_S>(),
        64usize,
        concat!("Size of: ", stringify!(DriverDescription_S))
    );
    assert_eq!(
        ::std::mem::align_of::<DriverDescription_S>(),
        8usize,
        concat!("Alignment of ", stringify!(DriverDescription_S))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).symbolicname) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(symbolicname)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).explanation) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(explanation)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).suffix) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(suffix)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).additionalInfo) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(additionalInfo)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).backendSupportsSubPaths) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsSubPaths)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).backendSupportsCurveto) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsCurveto)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).backendSupportsMerging) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsMerging)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).backendSupportsText) as usize - ptr as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsText)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).backendSupportsImages) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsImages)
        )
    );
    assert_eq!(
        unsafe {
            ::std::ptr::addr_of!((*ptr).backendSupportsMultiplePages) as usize - ptr as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsMultiplePages)
        )
    );
    #[cfg(feature = "pstoedit_4_00")]
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).formatGroup) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(formatGroup)
        )
    );
}
#[cfg(not(feature = "pstoedit_4_00"))]
pub const pstoeditdllversion: ::std::os::raw::c_uint = 301;
#[cfg(feature = "pstoedit_4_00")]
pub const pstoeditdllversion: ::std::os::raw::c_uint = 401;
extern "C" {
    pub fn pstoedit_plainC(
        argc: ::std::os::raw::c_int,
        argv: *const *const ::std::os::raw::c_char,
        psinterpreter: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn getPstoeditDriverInfo_plainC() -> *mut DriverDescription_S;
}
extern "C" {
    pub fn clearPstoeditDriverInfo_plainC(ptr: *mut DriverDescription_S);
}
extern "C" {
    #[cfg(feature = "pstoedit_4_01")]
    #[cfg_attr(docsrs, doc(cfg(feature = "pstoedit_4_01")))]
    pub fn loadpstoeditplugins_plainC(
        progname: *const ::std::os::raw::c_char,
        verbose: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[cfg(feature = "pstoedit_4_00")]
    #[cfg_attr(docsrs, doc(cfg(feature = "pstoedit_4_00")))]
    pub fn unloadpstoeditplugins();
}
extern "C" {
    pub fn getPstoeditNativeDriverInfo_plainC() -> *mut DriverDescription_S;
}
extern "C" {
    pub fn pstoedit_checkversion(callersversion: ::std::os::raw::c_uint) -> ::std::os::raw::c_int;
}
