/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DriverDescription_S {
    pub symbolicname: *const ::std::os::raw::c_char,
    pub explanation: *const ::std::os::raw::c_char,
    pub suffix: *const ::std::os::raw::c_char,
    pub additionalInfo: *const ::std::os::raw::c_char,
    pub backendSupportsSubPaths: ::std::os::raw::c_int,
    pub backendSupportsCurveto: ::std::os::raw::c_int,
    pub backendSupportsMerging: ::std::os::raw::c_int,
    pub backendSupportsText: ::std::os::raw::c_int,
    pub backendSupportsImages: ::std::os::raw::c_int,
    pub backendSupportsMultiplePages: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_DriverDescription_S() {
    assert_eq!(
        ::std::mem::size_of::<DriverDescription_S>(),
        56usize,
        concat!("Size of: ", stringify!(DriverDescription_S))
    );
    assert_eq!(
        ::std::mem::align_of::<DriverDescription_S>(),
        8usize,
        concat!("Alignment of ", stringify!(DriverDescription_S))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).symbolicname as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(symbolicname)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DriverDescription_S>())).explanation as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(explanation)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DriverDescription_S>())).suffix as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(suffix)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).additionalInfo as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(additionalInfo)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).backendSupportsSubPaths as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsSubPaths)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).backendSupportsCurveto as *const _
                as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsCurveto)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).backendSupportsMerging as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsMerging)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).backendSupportsText as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsText)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).backendSupportsImages as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsImages)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<DriverDescription_S>())).backendSupportsMultiplePages as *const _
                as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(DriverDescription_S),
            "::",
            stringify!(backendSupportsMultiplePages)
        )
    );
}
pub const pstoeditdllversion: ::std::os::raw::c_uint = 301;
extern "C" {
    pub fn pstoedit_plainC(
        argc: ::std::os::raw::c_int,
        argv: *const *const ::std::os::raw::c_char,
        psinterpreter: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn getPstoeditDriverInfo_plainC() -> *mut DriverDescription_S;
}
extern "C" {
    pub fn clearPstoeditDriverInfo_plainC(ptr: *mut DriverDescription_S);
}
extern "C" {
    pub fn getPstoeditNativeDriverInfo_plainC() -> *mut DriverDescription_S;
}
extern "C" {
    pub fn pstoedit_checkversion(callersversion: ::std::os::raw::c_uint) -> ::std::os::raw::c_int;
}
