name: CI sys
on: [push, pull_request]

env:
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  CARGO_TERM_VERBOSE: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, macos]
        include:
          - build: stable
            os: ubuntu-20.04
            rust: stable
          - build: beta
            os: ubuntu-20.04
            rust: beta
          - build: nightly
            os: ubuntu-20.04
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Install pstoedit (linux)
      if: matrix.os == 'ubuntu-20.04'
      run: |
           sudo apt-get update
           sudo apt-get install -y libpstoedit-dev ghostscript
    - name: Install pstoedit (mac)
      if: matrix.os == 'macos-latest'
      run: brew install pstoedit ghostscript
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Build
      run: cargo build
      working-directory: pstoedit-sys
    - name: Test
      run: cargo test
      working-directory: pstoedit-sys

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - name: Check clippy
      run: cargo clippy
      working-directory: pstoedit-sys
    - name: Check formatting
      run: cargo fmt -- --check
      working-directory: pstoedit-sys
    - name: Check documentation
      run: cargo doc --no-deps
      working-directory: pstoedit-sys
